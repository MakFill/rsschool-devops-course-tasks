name: CI Workflow

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions:
  id-token: write
  contents: read

env:
  AWS_ARN: ${{ secrets.AWS_ARN }}
  TF_VAR_AWS_ARN: ${{ secrets.AWS_ARN }}
  TF_VAR_REPO: ${{ secrets.REPO }}

jobs:
  terraform-check:
    name: Terraform check
    runs-on: ubuntu-latest

    steps:
      # Checks-out repository under $GITHUB_WORKSPACE, so the job can access it
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6

      - name: Run tf check
        run: terraform fmt

  terraform-plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs: terraform-check

    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ARN }}:role/AwsAssumeTFPolicy
          aws-region: eu-west-1

      - name: Run tf init
        run: terraform init

      - name: Run tf plan
        run: terraform plan

  terraform-apply:
    name: Terraform apply
    runs-on: ubuntu-latest
    needs: terraform-plan

    steps:
      - uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ARN }}:role/AwsAssumeTFPolicy
          aws-region: eu-west-1

      - name: Run tf init
        run: terraform init

      - name: Run tf apply
        run: terraform apply -auto-approve
